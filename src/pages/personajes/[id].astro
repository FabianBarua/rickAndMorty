---
import ButtonAction from "@/components/ButtonAction.astro";
import { ButtonCharacter } from "@/components/ButtonCharacter";
import { EpisodesSection } from "@/components/EpisodesSection";
import Galaxia from "@/components/Icons/Galaxia.astro";
import MaleIcon from "@/components/Icons/MaleIcon.astro";
import MoreIcon from "@/components/Icons/MoreIcon.astro";
import Layout from "@/layouts/Layout.astro";
import { getEpisode } from "@/utils/services/rickAndMorty";
import { getCharacter } from "@/utils/services/rickAndMorty";
import { getAllCharacterIds } from "@/utils/services/rickAndMorty";
import { motion } from "framer-motion";

export async function getStaticPaths() {
  const paths: { params: { id: string } }[] = await getAllCharacterIds();

  const params = paths.map((id) => {
    return {
      params: { id: id.toString() },
    };
  });

  return params;
}

const { id } = Astro.params;

const character = await getCharacter({ id });

const episodesIds = character?.episode?.map((episode) => {
  const episodeId = episode.split("/").pop();
  return episodeId;
});

let episodes = await getEpisode({ id: episodesIds });

if (!Array.isArray(episodes)) {
  episodes = [episodes];
}
---

<Layout title={character.name}>
  <div
    class="sm:max-w-xl lg:max-w-5xl mx-auto h-full mb-12 overflow-hidden sm:overflow-visible px-6 sm:px-0"
  >
    <div
      class="w-full flex-col-reverse sm:flex-row gap-9 sm:gap-9 justify-center sm:items-center flex mx-auto bg-default-50 mt-12 rounded-2xl px-5 sm:px-12 py-8 border border-default-300"
    >
      <div class="flex-1">
        <h1 class="text-3xl mb-2 font-bold">{character.name}</h1>
        <p class="font-bold text-md text-default-500">
          Estado: <span class="font-normal">{character.status}</span>
        </p>
        <p class="font-bold text-md text-default-500">
          Especie: <span class="font-normal">{character.species}</span>
        </p>
        <p class="font-bold text-md text-default-500">
          Origen: <span class="font-normal">{character.origin}</span>
        </p>
        <div
          class="flex flex-wrap sm:flex-nowrap justify-center mx-auto sm:mx-0 mt-8 sm:mt-4 pt-6 border-t border-default-400 sm:w-min gap-7 font-semibold text-sm"
        >
          <div class="text-center bgrb">
            <p class="text-5xl w-24 font-bold">
              {character?.episode?.length || 0}
            </p>
            <p class="text-default-400">
              Episodio{
                (character?.episode?.length > 1 ||
                  character?.episode?.lenght === 0) &&
                  "s"
              }
            </p>
          </div>
          <div>
            <div class="h-12 py-1 flex justify-center">
              {character?.gender === "Male" ? <MaleIcon /> : <MaleIcon />}
            </div>
            <p class="text-center text-default-400">{character.gender}</p>
          </div>
          <div class="flex flex-col justify-center items-center">
            <div class="h-12 py-1 w-16 flex justify-center">
              <Galaxia />
            </div>
            <p class="text-center text-default-400 leading-4">
              {character?.location?.name}
            </p>
          </div>
        </div>
      </div>
      <div class="size-52 mx-auto sm:mx-0 relative">
        <img
          class="w-full h-full object-cover rounded-2xl"
          style={{
            viewTransitionName: `character-image-${id}`,
          }}
          src={character.image}
          alt={character.name}
        />
        {
          character.location.id && (
            <ButtonCharacter client:only="react" id={character?.id} />
          )
        }
      </div>
    </div>
    {/* section bottom */}

    <div>
      <div class="flex justify-between items-center mt-16">
        <h1
          class="text-xl text-balance lg:text-3xl text-default-500 dark:text-default-400"
        >
          Los episodios en los que aparece
        </h1>
        <ButtonAction href="/episodios">
          <MoreIcon /> Ver todos
        </ButtonAction>
      </div>
      <hr class="my-5 text-foreground-100" />
      {
        episodes.length > 0 ? (
          <div class=" max-h-[35rem] mask overflow-auto scrollbar-hide pb-16">
            <EpisodesSection episodes={episodes} />
          </div>
        ) : (
          <p class="text-center text-default-400">No hay episodios</p>
        )
      }
    </div>
  </div>
</Layout>
